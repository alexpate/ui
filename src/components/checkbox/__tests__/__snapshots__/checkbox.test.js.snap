// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox should render a checkbox partially checked 1`] = `
.emotion-3 {
  position: relative;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: flex-start;
  align-content: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1 {
  display: inline-block;
  vertical-align: bottom;
  margin-left: 10px;
  font-family: 'WebFaktSoftPro',sans-serif;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: inherit;
  text-align: unset;
  text-decoration: inherit;
  font-weight: 400;
  font-size: 14px;
  color: rgb(84,103,137);
  white-space: normal;
  text-overflow: initial;
  overflow: visible;
  white-space: pre-wrap;
  word-break: break-word;
}

.emotion-1:hover {
  text-decoration: inherit;
}

.emotion-1 strong {
  font-weight: 500;
}

<div
  className="ui-checkbox ui-checkbox--medium emotion-2 emotion-3"
  data-test="ui-checkbox"
  name={undefined}
  style={Object {}}
>
  <input
    checked={false}
    disabled={false}
    id="toggleButton3"
    type="checkbox"
  />
  <label
    htmlFor="toggleButton3"
    onClick={undefined}
  >
    <span
      className="emotion-0 emotion-1"
      color="navy600"
      onClick={undefined}
      size="small"
      style={Object {}}
    >
      A checkbox label
    </span>
  </label>
</div>
`;

exports[`Checkbox should render a checkbox with label 1`] = `
.emotion-3 {
  position: relative;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: flex-start;
  align-content: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1 {
  display: inline-block;
  vertical-align: bottom;
  margin-left: 10px;
  font-family: 'WebFaktSoftPro',sans-serif;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: inherit;
  text-align: unset;
  text-decoration: inherit;
  font-weight: 400;
  font-size: 14px;
  color: rgb(84,103,137);
  white-space: normal;
  text-overflow: initial;
  overflow: visible;
  white-space: pre-wrap;
  word-break: break-word;
}

.emotion-1:hover {
  text-decoration: inherit;
}

.emotion-1 strong {
  font-weight: 500;
}

<div
  className="ui-checkbox ui-checkbox--medium emotion-2 emotion-3"
  data-test="ui-checkbox"
  name={undefined}
  style={Object {}}
>
  <input
    checked={true}
    disabled={false}
    id="toggleButton2"
    type="checkbox"
  />
  <label
    htmlFor="toggleButton2"
    onClick={undefined}
  >
    <span
      className="emotion-0 emotion-1"
      color="navy600"
      onClick={undefined}
      size="small"
      style={Object {}}
    >
      A checkbox label
    </span>
  </label>
</div>
`;

exports[`Checkbox should render shallow component ok 1`] = `
.emotion-1 {
  position: relative;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: flex-start;
  align-content: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
  className="ui-checkbox ui-checkbox--medium emotion-0 emotion-1"
  data-test="ui-checkbox"
  name={undefined}
  style={Object {}}
>
  <input
    checked={true}
    disabled={false}
    id="toggleButton1"
    type="checkbox"
  />
  <label
    htmlFor="toggleButton1"
    onClick={undefined}
  />
</div>
`;
